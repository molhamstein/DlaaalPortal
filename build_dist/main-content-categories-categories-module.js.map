{"version":3,"sources":["webpack:///./src/app/main/content/categories/categories.module.ts","webpack:///./src/app/main/content/categories/category-detail/category-detail.component.html","webpack:///./src/app/main/content/categories/category-detail/category-detail.component.scss","webpack:///./src/app/main/content/categories/category-detail/category-detail.component.ts","webpack:///./src/app/main/content/categories/category-edit/category-edit.component.html","webpack:///./src/app/main/content/categories/category-edit/category-edit.component.scss","webpack:///./src/app/main/content/categories/category-edit/category-edit.component.ts","webpack:///./src/app/main/content/categories/category-list/category-list.component.html","webpack:///./src/app/main/content/categories/category-list/category-list.component.scss","webpack:///./src/app/main/content/categories/category-list/category-list.component.ts","webpack:///./src/app/main/content/categories/category.model.ts","webpack:///./src/app/main/content/categories/category.resolver.ts"],"names":[],"mappings":"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","file":"main-content-categories-categories-module.js","sourcesContent":["import { CategoriesService } from './categories.service';\nimport { SharedModule } from './../../../core/modules/shared.module';\nimport { Routes, RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CategoryListComponent } from './category-list/category-list.component';\nimport { CategoryDetailComponent } from './category-detail/category-detail.component';\nimport { CategoryEditComponent } from './category-edit/category-edit.component';\nimport { CategoryResolver } from './category.resolver';\nimport {SubCategoriesService} from '../categories/subCategories/subCategories.service';\nimport {AdvertisementResolver} from '../lazy-child/advertisement.resolver';\nimport {AdvertisementDetailsComponent} from '../lazy-child/advertisement-details/advertisement-details.component';\n\nconst routes: Routes = [\n  {\n    path: '', children: [\n      {\n        path: '',\n        component: CategoryListComponent,\n        resolve: {\n          serverResult: CategoryResolver\n        },\n        data: { resolverType: 'list' }\n      },\n      {\n        path: 'new',\n        component: CategoryEditComponent,\n        data: {\n          isEditMode: false\n        }\n      },\n      {\n        path: ':id/edit',\n        component: CategoryEditComponent,\n        resolve: {\n          serverResult: CategoryResolver\n        },\n        data: {\n          resolverType: 'item',\n          isEditMode: true\n        }\n      },\n      {\n        path: ':id/details',\n        component: CategoryDetailComponent,\n        resolve: {\n          serverResult: CategoryResolver\n        },\n        data: {\n          resolverType: 'item',\n        }\n      },\n    ]\n  }\n];\n\n@NgModule({\n  imports: [\n    SharedModule,\n    RouterModule.forChild(routes)\n  ],\n  exports: [\n    RouterModule\n  ],\n  providers: [\n    CategoriesService,\n    CategoryResolver,\n    SubCategoriesService\n  ],\n  declarations: [CategoryListComponent, CategoryDetailComponent, CategoryEditComponent]\n})\nexport class CategoriesModule { }\n","module.exports = \"<div id=\\\"order\\\" class=\\\"page-layout carded fullwidth\\\" fusePerfectScrollbar>\\n\\n  <!-- TOP BACKGROUND -->\\n  <div class=\\\"top-bg mat-accent-bg\\\"></div>\\n  <!-- / TOP BACKGROUND -->\\n\\n  <!-- CENTER -->\\n  <div class=\\\"center\\\">\\n\\n    <!-- HEADER -->\\n    <div class=\\\"header white-fg\\\"\\n         fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\n\\n      <!-- APP TITLE -->\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n\\n        <button class=\\\"mr-16\\\" mat-icon-button [routerLink]=\\\"'/categories'\\\">\\n          <mat-icon>arrow_back</mat-icon>\\n        </button>\\n\\n        <div class=\\\"product-image mr-8 mr-sm-16\\\" *fuseIfOnDom\\n             [@animate]=\\\"{value:'*',params:{delay:'50ms',scale:'0.2'}}\\\">\\n          <img *ngIf=\\\"!category.image || category.image == ''\\\" [src]=\\\"defaultImage\\\">\\n          <img *ngIf=\\\"category.image != ''\\\" [src]=\\\"category.image\\\">\\n        </div>\\n\\n        <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start start\\\"\\n             *fuseIfOnDom [@animate]=\\\"{value:'*',params:{delay:'100ms',x:'-25px'}}\\\">\\n          <div class=\\\"h2\\\">\\n            {{category.title}}\\n          </div>\\n\\n        </div>\\n      </div>\\n      <!-- / APP TITLE -->\\n\\n    </div>\\n    <!-- / HEADER -->\\n\\n    <!-- CONTENT CARD -->\\n    <div class=\\\"content-card mat-white-bg\\\">\\n\\n      <!-- CONTENT -->\\n      <div class=\\\"content\\\">\\n\\n        <mat-tab-group>\\n\\n          <mat-tab label=\\\"Category Details\\\">\\n\\n            <div class=\\\"invoice tab-content p-24\\\" fusePerfectScrollbar>\\n\\n              <div id=\\\"invoice\\\" class=\\\"compact page-layout blank\\\" fxLayout=\\\"row\\\" fusePerfectScrollbar>\\n\\n                <div class=\\\"invoice-container\\\">\\n\\n                  <!-- INVOICE -->\\n                  <div class=\\\"card\\\">\\n\\n                    <div class=\\\"header1\\\" fxLayout=\\\"row\\\">\\n                      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between stretch\\\" fxFlex=\\\"60%\\\">\\n                        <div class=\\\"client\\\" >\\n                          <div class=\\\"invoice-number\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n                            <span class=\\\"mat-headline\\\">{{category.title}}</span>\\n                          </div>\\n                          </div>\\n                        </div>\\n                        <div class=\\\"issuer\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n                          <div class=\\\"logo\\\">\\n                            <img *ngIf=\\\"!category.image || category.image == ''\\\" [src]=\\\"defaultImage\\\">\\n                            <img *ngIf=\\\"category.image && category.image != ''\\\" [src]=\\\"category.image\\\">\\n                        </div>\\n                      </div>\\n                    </div>\\n\\n                  </div>\\n                  <!-- / INVOICE -->\\n\\n                </div>\\n              </div>\\n            </div>\\n          </mat-tab>\\n\\n        </mat-tab-group>\\n\\n      </div>\\n      <!-- / CONTENT -->\\n\\n    </div>\\n    <!-- / CONTENT CARD -->\\n\\n  </div>\\n  <!-- / CENTER -->\\n</div>\\n\\n\"","module.exports = \"#order .header .product-image {\\n  overflow: hidden;\\n  width: 56px;\\n  height: 56px; }\\n  #order .header .product-image img {\\n    height: 100%;\\n    width: 100%;\\n    max-width: none;\\n    border-radius: 50%; }\\n  #order .header .subtitle {\\n  margin: 6px 0 0 0; }\\n  #order .content .mat-tab-group,\\n#order .content .mat-tab-body-wrapper,\\n#order .content .tab-content {\\n  flex: 1 1 auto;\\n  max-width: 100%; }\\n  #order .content .tab-content {\\n  flex: 1 1 auto; }\\n  #order .content .tab-content.products .product-row {\\n    cursor: pointer; }\\n  #order .content .tab-content.invoice {\\n    /* PRINT STYLES */ }\\n  #order .content .tab-content.invoice #invoice.compact {\\n      padding: 0;\\n      overflow: auto; }\\n  #order .content .tab-content.invoice #invoice.compact .invoice-container {\\n        padding: 16px; }\\n  #order .content .tab-content.invoice #invoice.compact .invoice-container .card {\\n          width: 900px;\\n          max-width: 900px;\\n          padding: 64px 88px;\\n          overflow: hidden;\\n          background: #FFFFFF; }\\n  #order .content .tab-content.invoice #invoice.compact .invoice-container .card .header1 .client .invoice-number {\\n            font-size: 18px;\\n            padding-bottom: 2px; }\\n  #order .content .tab-content.invoice #invoice.compact .invoice-container .card .header1 .client .invoice-number .green {\\n              color: green; }\\n  #order .content .tab-content.invoice #invoice.compact .invoice-container .card .header1 .client .invoice-number .red {\\n              color: red; }\\n  #order .content .tab-content.invoice #invoice.compact .invoice-container .card .header1 .client .invoice-number .title {\\n              color: rgba(0, 0, 0, 0.54); }\\n  #order .content .tab-content.invoice #invoice.compact .invoice-container .card .header1 .client .invoice-number .number {\\n              padding-left: 6px; }\\n  #order .content .tab-content.invoice #invoice.compact .invoice-container .card .header1 .client .due-date {\\n            font-size: 18px;\\n            padding-bottom: 16px; }\\n  #order .content .tab-content.invoice #invoice.compact .invoice-container .card .header1 .client .due-date .title {\\n              color: rgba(0, 0, 0, 0.54); }\\n  #order .content .tab-content.invoice #invoice.compact .invoice-container .card .header1 .client .due-date .date {\\n              padding-left: 6px; }\\n  #order .content .tab-content.invoice #invoice.compact .invoice-container .card .header1 .client .info {\\n            color: rgba(0, 0, 0, 0.54);\\n            line-height: 22px; }\\n  #order .content .tab-content.invoice #invoice.compact .invoice-container .card .header1 .client .info .number {\\n              padding-left: 6px;\\n              color: black; }\\n  #order .content .tab-content.invoice #invoice.compact .invoice-container .card .header1 .client .info .green {\\n              font-size: 16px;\\n              color: green; }\\n  #order .content .tab-content.invoice #invoice.compact .invoice-container .card .header1 .client .info .red {\\n              font-size: 16px;\\n              color: red; }\\n  #order .content .tab-content.invoice #invoice.compact .invoice-container .card .header1 .issuer .logo {\\n            width: 300px; }\\n  #order .content .tab-content.invoice #invoice.compact .invoice-container .card .header1 .issuer .logo img {\\n              -o-object-fit: cover;\\n                 object-fit: cover;\\n              width: 100%;\\n              height: 300px; }\\n  #order .content .tab-content.invoice #invoice.compact .invoice-container .card .header1 .issuer .info {\\n            padding: 16px; }\\n  #order .content .tab-content.invoice #invoice.compact .invoice-container .card .content .invoice-table {\\n            margin-top: 64px;\\n            font-size: 15px; }\\n  #order .content .tab-content.invoice #invoice.compact .invoice-container .card .content .invoice-table thead tr th:first-child {\\n              padding-left: 8px; }\\n  #order .content .tab-content.invoice #invoice.compact .invoice-container .card .content .invoice-table thead tr th:last-child {\\n              padding-right: 8px; }\\n  #order .content .tab-content.invoice #invoice.compact .invoice-container .card .content .invoice-table tbody tr td:first-child {\\n              padding-left: 8px; }\\n  #order .content .tab-content.invoice #invoice.compact .invoice-container .card .content .invoice-table tbody tr td:last-child {\\n              padding-right: 8px; }\\n  #order .content .tab-content.invoice #invoice.compact .invoice-container .card .content .invoice-table .title {\\n              font-size: 16px; }\\n  #order .content .tab-content.invoice #invoice.compact .invoice-container .card .content .invoice-table .detail {\\n              margin-top: 8px;\\n              font-size: 12px;\\n              color: rgba(0, 0, 0, 0.54);\\n              max-width: 360px; }\\n  #order .content .tab-content.invoice #invoice.compact .invoice-container .card .content .invoice-table-footer {\\n            margin: 32px 0 72px 0; }\\n  #order .content .tab-content.invoice #invoice.compact .invoice-container .card .content .invoice-table-footer tr td {\\n              text-align: right;\\n              font-size: 16px;\\n              font-weight: 500;\\n              color: rgba(0, 0, 0, 0.54);\\n              border-bottom: none;\\n              padding: 4px 8px; }\\n  #order .content .tab-content.invoice #invoice.compact .invoice-container .card .content .invoice-table-footer tr td:first-child {\\n                text-align: left; }\\n  #order .content .tab-content.invoice #invoice.compact .invoice-container .card .content .invoice-table-footer tr.discount td {\\n              padding-bottom: 32px; }\\n  #order .content .tab-content.invoice #invoice.compact .invoice-container .card .content .invoice-table-footer tr.total td {\\n              padding: 24px 8px;\\n              border-top: 1px solid rgba(0, 0, 0, 0.12);\\n              font-size: 35px;\\n              font-weight: 300;\\n              color: black; }\\n  #order .content .tab-content.invoice #invoice.compact .invoice-container .card .footer .note {\\n            font-size: 15px;\\n            font-weight: 500;\\n            margin-bottom: 24px; }\\n  #order .content .tab-content.invoice #invoice.compact .invoice-container .card .footer .logo, #order .content .tab-content.invoice #invoice.compact .invoice-container .card .footer .small-note {\\n            -ms-flex: 0 1 auto; }\\n  #order .content .tab-content.invoice #invoice.compact .invoice-container .card .footer .logo {\\n            width: 32px;\\n            min-width: 32px;\\n            margin-right: 24px; }\\n  #order .content .tab-content.invoice #invoice.compact .invoice-container .card .footer .small-note {\\n            font-size: 12px;\\n            font-weight: 500;\\n            color: rgba(0, 0, 0, 0.54);\\n            line-height: 18px; }\\n  @media print {\\n      #order .content .tab-content.invoice {\\n        /* Invoice Specific Styles */ }\\n        #order .content .tab-content.invoice #invoice.compact .invoice-container {\\n          padding: 0; }\\n          #order .content .tab-content.invoice #invoice.compact .invoice-container .card {\\n            width: 100%;\\n            min-width: 0;\\n            background: none;\\n            padding: 0;\\n            box-shadow: none; }\\n            #order .content .tab-content.invoice #invoice.compact .invoice-container .card .header .invoice-date {\\n              margin-bottom: 16pt; }\\n            #order .content .tab-content.invoice #invoice.compact .invoice-container .card .header .issuer {\\n              padding-right: 0;\\n              margin-right: 0; }\\n            #order .content .tab-content.invoice #invoice.compact .invoice-container .card .content .invoice-table {\\n              margin-top: 16pt; }\\n              #order .content .tab-content.invoice #invoice.compact .invoice-container .card .content .invoice-table thead tr th {\\n                font-size: 10pt;\\n                max-width: 60pt; }\\n                #order .content .tab-content.invoice #invoice.compact .invoice-container .card .content .invoice-table thead tr th:first-child {\\n                  padding-left: 0; }\\n                #order .content .tab-content.invoice #invoice.compact .invoice-container .card .content .invoice-table thead tr th:last-child {\\n                  padding-right: 0; }\\n              #order .content .tab-content.invoice #invoice.compact .invoice-container .card .content .invoice-table tbody tr td:first-child {\\n                padding-left: 0; }\\n              #order .content .tab-content.invoice #invoice.compact .invoice-container .card .content .invoice-table tbody tr td:last-child {\\n                padding-right: 0; }\\n              #order .content .tab-content.invoice #invoice.compact .invoice-container .card .content .invoice-table .title {\\n                font-size: 10pt; }\\n              #order .content .tab-content.invoice #invoice.compact .invoice-container .card .content .invoice-table .detail {\\n                margin-top: 4pt;\\n                font-size: 9pt;\\n                max-width: none; }\\n            #order .content .tab-content.invoice #invoice.compact .invoice-container .card .content .invoice-table-footer {\\n              margin: 16pt 0; }\\n              #order .content .tab-content.invoice #invoice.compact .invoice-container .card .content .invoice-table-footer tr td {\\n                font-size: 13pt;\\n                padding: 4pt 4pt; }\\n                #order .content .tab-content.invoice #invoice.compact .invoice-container .card .content .invoice-table-footer tr td:first-child {\\n                  text-align: left;\\n                  padding-left: 0; }\\n                #order .content .tab-content.invoice #invoice.compact .invoice-container .card .content .invoice-table-footer tr td:last-child {\\n                  padding-right: 0; }\\n              #order .content .tab-content.invoice #invoice.compact .invoice-container .card .content .invoice-table-footer tr.discount td {\\n                padding-bottom: 16pt; }\\n              #order .content .tab-content.invoice #invoice.compact .invoice-container .card .content .invoice-table-footer tr.total td {\\n                padding: 16pt 4pt 0 4pt;\\n                font-size: 16pt; }\\n                #order .content .tab-content.invoice #invoice.compact .invoice-container .card .content .invoice-table-footer tr.total td:first-child {\\n                  padding-left: 0; }\\n                #order .content .tab-content.invoice #invoice.compact .invoice-container .card .content .invoice-table-footer tr.total td:last-child {\\n                  padding-right: 0; }\\n            #order .content .tab-content.invoice #invoice.compact .invoice-container .card .footer .note {\\n              font-size: 10pt;\\n              margin-bottom: 8pt; }\\n            #order .content .tab-content.invoice #invoice.compact .invoice-container .card .footer .logo {\\n              margin-right: 8pt; }\\n            #order .content .tab-content.invoice #invoice.compact .invoice-container .card .footer .small-note {\\n              font-size: 8pt;\\n              line-height: normal; } }\\n  #order .content .mat-tab-body-content {\\n  display: flex; }\\n  #order .content .mat-tab-label {\\n  height: 64px; }\\n  #order .content table {\\n  table-layout: fixed; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {fuseAnimations} from '../../../../core/animations';\nimport {Category} from './../category.model';\nimport {User} from '../../users/user.model';\n\n@Component({\n  selector: 'app-category-detail',\n  templateUrl: './category-detail.component.html',\n  styleUrls: ['./category-detail.component.scss'],\n  animations: fuseAnimations\n})\nexport class CategoryDetailComponent implements OnInit {\n  category: Category;\n  defaultImage = '../../../../../assets/images/ecommerce/product-image-placeholder.png';\n\n  constructor(private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    if (this.route.snapshot.data['serverResult']) {\n      this.category = this.route.snapshot.data['serverResult'];\n    }\n  }\n\n}\n","module.exports = \"<div id=\\\"product\\\" class=\\\"page-layout carded fullwidth\\\" fusePerfectScrollbar>\\n\\n  <!-- TOP BACKGROUND -->\\n  <div class=\\\"top-bg mat-accent-bg\\\"></div>\\n  <!-- / TOP BACKGROUND -->\\n\\n  <!-- CENTER -->\\n  <div class=\\\"center\\\">\\n\\n    <!-- HEADER -->\\n    <div class=\\\"header white-fg\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\n\\n      <!-- APP TITLE -->\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n\\n        <button class=\\\"mr-0 mr-sm-16\\\" mat-icon-button [routerLink]=\\\"'/categories'\\\">\\n          <mat-icon>arrow_back</mat-icon>\\n        </button>\\n\\n        <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start start\\\" *fuseIfOnDom [@animate]=\\\"{value:'*',params:{delay:'100ms',x:'-25px'}}\\\">\\n          <div class=\\\"h2\\\" *ngIf=\\\"isEditMode\\\">\\n            {{categoryForm.value.title}}\\n          </div>\\n          <div class=\\\"h2\\\" *ngIf=\\\"!isEditMode\\\">\\n            New Category\\n          </div>\\n          <div class=\\\"subtitle secondary-text\\\">\\n            <span>Category Details</span>\\n          </div>\\n        </div>\\n      </div>\\n      <!-- / APP TITLE -->\\n\\n      <button mat-raised-button class=\\\"save-product-button mat-white-bg mt-16 mt-sm-0\\\" [disabled]=\\\"categoryForm.status == 'INVALID' || tabIndex==2\\\"\\n        (click)=\\\"f.ngSubmit.emit()\\\">\\n        <span>SAVE</span>\\n      </button>\\n\\n      <!--<button mat-raised-button class=\\\"save-product-button mat-white-bg mt-16 mt-sm-0\\\"\\n              (click)=\\\"printt(categoryForm)\\\">\\n        <span>ss</span>\\n      </button>-->\\n    </div>\\n    <!-- / HEADER -->\\n\\n    <!-- CONTENT CARD -->\\n    <div class=\\\"content-card mat-white-bg\\\">\\n\\n      <!-- CONTENT -->\\n      <div class=\\\"content\\\">\\n        <form [formGroup]=\\\"categoryForm\\\" novalidate (ngSubmit)=\\\"onSubmit(f)\\\" #f=\\\"ngForm\\\" class=\\\"product w-100-p\\\" fxLayout=\\\"column\\\"\\n          fxFlex>\\n          <mat-tab-group (selectedTabChange)=\\\"tabChanged($event);fixBug($event.index)\\\">\\n            <mat-tab label=\\\"Basic Info\\\">\\n              <div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\">\\n                <div class=\\\"tab-content p-24\\\" fxFlex=\\\"70%\\\">\\n                  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start start\\\">\\n                    <mat-icon class=\\\"mr-12 mt-12\\\">group_work</mat-icon>\\n                    <mat-form-field class=\\\"w-100-p\\\">\\n                      <input type=\\\"text\\\" matInput formControlName=\\\"title\\\" name=\\\"title\\\" placeholder=\\\"Title\\\" required>\\n                      <mat-error *ngIf=\\\"categoryForm.controls.title.invalid\\\">{{getErrorMessage('title','required','')}}\\n                      </mat-error>\\n                    </mat-form-field>\\n                  </div>\\n                </div>\\n                <div class=\\\"p-4\\\" fxLayout=\\\"column\\\" fxLayoutGap=\\\"3px\\\" fxFlex=\\\"25%\\\">\\n                  <img *ngIf=\\\"photo != ''\\\" [src]=\\\"photo\\\">\\n                  <img *ngIf=\\\"photo == ''\\\" [src]=\\\"defaultImage\\\">\\n                  <input type=\\\"file\\\" accept=\\\"image/*\\\" #file name=\\\"image\\\" fxHide (change)=\\\"onFileChange($event)\\\">\\n                  <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"browseProfilePicture()\\\">Browse\\n                  </button>\\n                  <button type=\\\"button\\\" mat-raised-button color=\\\"warn\\\" (click)=\\\"removeFile()\\\">Remove</button>\\n                </div>\\n              </div>\\n            </mat-tab>\\n\\n            <mat-tab label=\\\"Category Fields\\\" *ngIf=\\\"isEditMode\\\">\\n              <form class=\\\"tab-content p-24\\\" fxFlex [formGroup]=\\\"fieldsForm\\\" novalidate>\\n                <mat-accordion *ngIf=\\\"showMe\\\">\\n                  <div formArrayName=\\\"fields\\\" *ngIf=\\\"fieldsForm.controls.fields\\\">\\n                    <mat-expansion-panel *ngFor=\\\"let field of fieldsForm.controls['fields'].controls; let i = index\\\" [expanded]=\\\"false\\\">\\n                      <mat-expansion-panel-header>\\n                        <mat-panel-title>\\n                          <h3 class=\\\"text-bold\\\"> {{field.value.key}}</h3>\\n                        </mat-panel-title>\\n                        <mat-panel-description>\\n\\n                        </mat-panel-description>\\n                      </mat-expansion-panel-header>\\n\\n                      <div fxLayout=\\\"row\\\">\\n                        <!--1-->\\n                        <button type=\\\"button\\\" mat-icon-button (click)=\\\"listClick($event, field)\\\">\\n                          <mat-icon *ngIf=\\\"!field.showSubfolders\\\">keyboard_arrow_right</mat-icon>\\n                          <mat-icon *ngIf=\\\"field.showSubfolders\\\">keyboard_arrow_down</mat-icon>\\n                        </button>\\n                        <div formGroupName=\\\"{{i}}\\\" fxLayout=\\\"column\\\">\\n                          <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"2rem\\\">\\n                            <button type=\\\"button\\\" mat-icon-button (click)=\\\"removeSomething([{val:i, remove: true}], 'fieldsForm')\\\" matTooltip=\\\"Remove {{field.controls.key.value}}\\\">\\n                              <mat-icon>delete</mat-icon>\\n                            </button>\\n\\n                            <mat-form-field class=\\\"w-100-p\\\">\\n                              <input matInput name=\\\"fieldkey\\\" placeholder=\\\"Key\\\" formControlName=\\\"key\\\" required>\\n                            </mat-form-field>\\n                            <mat-form-field class=\\\"w-100-p\\\" *ngIf=\\\"field.controls.type.value === 'text' || field.controls.type.value === 'choose'\\\">\\n                              <input matInput name=\\\"fieldkey\\\" placeholder=\\\"Value\\\" formControlName=\\\"value\\\">\\n                            </mat-form-field>\\n                            <mat-form-field class=\\\"w-100-p\\\" *ngIf=\\\"field.controls.type.value === 'number'\\\">\\n                              <input type=\\\"number\\\" matInput name=\\\"fieldkey\\\" placeholder=\\\"Value\\\" formControlName=\\\"value\\\">\\n                            </mat-form-field>\\n                            <mat-form-field class=\\\"w-100-p\\\">\\n                              <input type=\\\"number\\\" matInput name=\\\"fieldPriority\\\" placeholder=\\\"Priority\\\" formControlName=\\\"priority\\\">\\n                            </mat-form-field>\\n                            <mat-form-field class=\\\"w-100-p\\\">\\n                              <mat-select placeholder=\\\"Type\\\" name=\\\"fieldtype\\\" formControlName=\\\"type\\\" ([value])=\\\"field.controls.type.value\\\" (change)=\\\"onSelectType([{val:i, type:'choose'}], field.controls.type.value, 'fieldsForm')\\\">\\n                                <mat-option value=\\\"text\\\">Text</mat-option>\\n                                <mat-option value=\\\"number\\\">Number</mat-option>\\n                                <mat-option value=\\\"choose\\\">Select</mat-option>\\n                              </mat-select>\\n                            </mat-form-field>\\n\\n                            <button type=\\\"button\\\" mat-icon-button>\\n                              <mat-checkbox matTooltip=\\\"Is In Filter?\\\" formControlName=\\\"isInFilter\\\"></mat-checkbox>\\n                            </button>\\n\\n                          </div>\\n                          <!--2-->\\n\\n                          <div *ngIf=\\\"field.controls.type.value === 'choose' && field.controls.values && field.controls.values.length>0\\\" formArrayName=\\\"values\\\"\\n                            fxLayout=\\\"column\\\">\\n                            <div class=\\\"ml-32\\\" *ngFor=\\\"let vv of field.controls.values.controls; let j = index\\\" fxLayout=\\\"column\\\">\\n\\n                              <div fxLayout=\\\"column\\\" formGroupName=\\\"{{j}}\\\" *ngIf=\\\"field.showSubfolders\\\" [ngClass]=\\\"{ 'subfolder': selectedItem == field }\\\">\\n                                <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"2rem\\\">\\n                                  <button type=\\\"button\\\" mat-icon-button (click)=\\\"listClick($event, vv)\\\">\\n                                    <mat-icon *ngIf=\\\"!vv.showSubfolders\\\">keyboard_arrow_right</mat-icon>\\n                                    <mat-icon *ngIf=\\\"vv.showSubfolders\\\">keyboard_arrow_down</mat-icon>\\n                                  </button>\\n                                  <button type=\\\"button\\\" mat-icon-button (click)=\\\"removeSomething([{val: i}, {val: j, remove: true}], 'fieldsForm')\\\" matTooltip=\\\"Remove {{vv.controls.value.value}}\\\">\\n                                    <mat-icon>delete</mat-icon>\\n                                  </button>\\n                                  <mat-form-field class=\\\"w-100-p\\\" fxFlex=\\\"30%\\\">\\n                                    <input matInput name=\\\"fieldvalue\\\" placeholder=\\\"Value\\\" formControlName=\\\"value\\\">\\n                                  </mat-form-field>\\n                                </div>\\n                                <!--3-->\\n                                <div fxLayout=\\\"column\\\">\\n                                  <div *ngIf=\\\"vv.controls.fields && vv.controls.fields!==null && vv.controls.fields.length>0\\\" formArrayName=\\\"fields\\\">\\n                                    <div class=\\\"ml-32\\\" *ngFor=\\\"let ff of vv.controls.fields.controls; let k = index\\\" fxLayout=\\\"column\\\">\\n                                      <div fxLayout=\\\"column\\\" formGroupName=\\\"{{k}}\\\" *ngIf=\\\"vv.showSubfolders\\\" [ngClass]=\\\"{ 'subfolder': selectedItem == vv }\\\">\\n                                        <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"1rem\\\">\\n                                          <button type=\\\"button\\\" mat-icon-button (click)=\\\"listClick($event, ff)\\\">\\n                                            <mat-icon *ngIf=\\\"!ff.showSubfolders\\\">keyboard_arrow_right</mat-icon>\\n                                            <mat-icon *ngIf=\\\"ff.showSubfolders\\\">keyboard_arrow_down</mat-icon>\\n                                          </button>\\n                                          <button type=\\\"button\\\" mat-icon-button (click)=\\\"removeSomething([{val:i},{val:j},{val:k, remove:true}], 'fieldsForm')\\\" matTooltip=\\\"Remove {{ff.controls.key.value}}\\\">\\n                                            <mat-icon>delete</mat-icon>\\n                                          </button>\\n\\n\\n                                          <mat-form-field class=\\\"w-100-p\\\">\\n                                            <input matInput name=\\\"ff\\\" placeholder=\\\"Key\\\" formControlName=\\\"key\\\">\\n                                          </mat-form-field>\\n                                          <mat-form-field class=\\\"w-100-p\\\" *ngIf=\\\"field.controls.type.value === 'text' || field.controls.type.value === 'choose'\\\">\\n                                            <input matInput name=\\\"fieldkey\\\" placeholder=\\\"Value\\\" formControlName=\\\"value\\\">\\n                                          </mat-form-field>\\n                                          <mat-form-field class=\\\"w-100-p\\\" *ngIf=\\\"field.controls.type.value === 'number'\\\">\\n                                            <input type=\\\"number\\\" matInput name=\\\"fieldkey\\\" placeholder=\\\"Value\\\" formControlName=\\\"value\\\">\\n                                          </mat-form-field>\\n                                          <mat-form-field class=\\\"w-100-p\\\">\\n                                            <input type=\\\"number\\\" matInput name=\\\"fieldPriority\\\" placeholder=\\\"Priority\\\" formControlName=\\\"priority\\\">\\n                                          </mat-form-field>\\n                                          <mat-form-field class=\\\"w-100-p\\\">\\n                                            <mat-select name=\\\"fft\\\" placeholder=\\\"Type\\\" formControlName=\\\"type\\\" ([value])=\\\"ff.controls.type.value\\\" (change)=\\\"onSelectType([{val:i}, {val:j}, {val:k,type:'choose'}], ff.controls.type.value,'fieldsForm')\\\">\\n                                              <mat-option value=\\\"text\\\">Text</mat-option>\\n                                              <mat-option value=\\\"number\\\">Number</mat-option>\\n                                              <mat-option value=\\\"choose\\\">Select</mat-option>\\n                                            </mat-select>\\n                                          </mat-form-field>\\n\\n                                          <button type=\\\"button\\\" mat-icon-button>\\n                                            <mat-checkbox matTooltip=\\\"Is In Filter?\\\" formControlName=\\\"isInFilter\\\"></mat-checkbox>\\n                                          </button>\\n                                        </div>\\n                                        <!--4-->\\n                                        <div *ngIf=\\\"ff.controls.type.value === 'choose'\\\" formArrayName=\\\"values\\\" fxLayout=\\\"column\\\">\\n                                          <div class=\\\"ml-32\\\" *ngFor=\\\"let vvv of ff.controls.values.controls; let e = index \\\">\\n                                            <div fxLayout=\\\"column\\\" formGroupName=\\\"{{e}}\\\" *ngIf=\\\"ff.showSubfolders\\\" [ngClass]=\\\"{ 'subfolder': selectedItem == ff }\\\">\\n                                              <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"2rem\\\">\\n                                                <button type=\\\"button\\\" mat-icon-button (click)=\\\"listClick($event, vvv)\\\">\\n                                                  <mat-icon *ngIf=\\\"!vvv.showSubfolders\\\">keyboard_arrow_right</mat-icon>\\n                                                  <mat-icon *ngIf=\\\"vvv.showSubfolders\\\">keyboard_arrow_down</mat-icon>\\n                                                </button>\\n                                                <button type=\\\"button\\\" mat-icon-button (click)=\\\"removeSomething([{val:i}, {val:j}, {val:k}, {val:e, remove:true}], 'fieldsForm')\\\"\\n                                                  matTooltip=\\\"Remove {{vvv.controls.value.value}}\\\">\\n                                                  <mat-icon>delete</mat-icon>\\n                                                </button>\\n                                                <mat-form-field class=\\\"w-100-p\\\" fxFlex=\\\"30%\\\">\\n                                                  <input matInput name=\\\"fieldvalue\\\" placeholder=\\\"Value\\\" formControlName=\\\"value\\\">\\n                                                </mat-form-field>\\n                                              </div>\\n                                              <!--5-->\\n                                              <div fxLayout=\\\"column\\\">\\n                                                <div *ngIf=\\\"vvv.controls.fields && vvv.controls.fields!==null && vvv.controls.fields.length>0\\\" formArrayName=\\\"fields\\\">\\n                                                  <div class=\\\"ml-32\\\" *ngFor=\\\"let fff of vvv.controls.fields.controls; let kk = index\\\" fxLayout=\\\"column\\\">\\n                                                    <div fxLayout=\\\"column\\\" formGroupName=\\\"{{kk}}\\\" *ngIf=\\\"vvv.showSubfolders\\\" [ngClass]=\\\"{ 'subfolder': selectedItem == vvv }\\\">\\n                                                      <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"1rem\\\">\\n                                                        <button type=\\\"button\\\" mat-icon-button (click)=\\\"listClick($event, fff)\\\">\\n                                                          <mat-icon *ngIf=\\\"!fff.showSubfolders\\\">keyboard_arrow_right</mat-icon>\\n                                                          <mat-icon *ngIf=\\\"fff.showSubfolders\\\">keyboard_arrow_down</mat-icon>\\n                                                        </button>\\n                                                        <button type=\\\"button\\\" mat-icon-button (click)=\\\"removeSomething([{val:i},{val:j},{val:k},{val:e},{val:kk, remove:true}], 'fieldsForm')\\\"\\n                                                          matTooltip=\\\"Remove {{fff.controls.key.value}}\\\">\\n                                                          <mat-icon>delete</mat-icon>\\n                                                        </button>\\n\\n                                                        <mat-form-field class=\\\"w-100-p\\\">\\n                                                          <input matInput name=\\\"fff\\\" placeholder=\\\"Key\\\" formControlName=\\\"key\\\">\\n                                                        </mat-form-field>\\n                                                        <mat-form-field class=\\\"w-100-p\\\" *ngIf=\\\"fff.controls.type.value === 'text' || fff.controls.type.value === 'choose'\\\">\\n                                                          <input matInput name=\\\"fieldkey\\\" placeholder=\\\"Value\\\" formControlName=\\\"value\\\">\\n                                                        </mat-form-field>\\n                                                        <mat-form-field class=\\\"w-100-p\\\" *ngIf=\\\"fff.controls.type.value === 'number'\\\">\\n                                                          <input type=\\\"number\\\" matInput name=\\\"fieldkey\\\" placeholder=\\\"Value\\\" formControlName=\\\"value\\\">\\n                                                        </mat-form-field>\\n                                                        <mat-form-field class=\\\"w-100-p\\\">\\n                                                          <input type=\\\"number\\\" matInput name=\\\"fieldPriority\\\" placeholder=\\\"Priority\\\" formControlName=\\\"priority\\\">\\n                                                        </mat-form-field>\\n                                                        <mat-form-field class=\\\"w-100-p\\\">\\n                                                          <mat-select name=\\\"ffft\\\" placeholder=\\\"Type\\\" formControlName=\\\"type\\\" ([value])=\\\"fff.controls.type.value\\\" (change)=\\\"onSelectType([{val:i}, {val:j},{val:k},{val:e}, {val:kk,type:'choose'}], fff.controls.type.value,'fieldsForm')\\\">\\n                                                            <mat-option value=\\\"text\\\">Text</mat-option>\\n                                                            <mat-option value=\\\"number\\\">Number</mat-option>\\n                                                            <mat-option value=\\\"choose\\\">Select</mat-option>\\n                                                          </mat-select>\\n                                                        </mat-form-field>\\n\\n                                                        <button type=\\\"button\\\" mat-icon-button>\\n                                                          <mat-checkbox matTooltip=\\\"Is In Filter?\\\" formControlName=\\\"isInFilter\\\"></mat-checkbox>\\n                                                        </button>\\n\\n                                                      </div>\\n                                                      <!--6-->\\n\\n                                                      <div *ngIf=\\\"fff.controls.type.value === 'choose'\\\" formArrayName=\\\"values\\\">\\n                                                        <div class=\\\"ml-32\\\" *ngFor=\\\"let vvvv of fff.controls.values.controls; let ee = index \\\" fxLayout=\\\"column\\\">\\n                                                          <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"2rem\\\" formGroupName=\\\"{{ee}}\\\" *ngIf=\\\"fff.showSubfolders\\\" [ngClass]=\\\"{ 'subfolder': selectedItem == fff }\\\">\\n                                                            <button type=\\\"button\\\" mat-icon-button (click)=\\\"listClick($event, vv)\\\">\\n                                                              <mat-icon *ngIf=\\\"!vvvv.showSubfolders\\\">keyboard_arrow_right</mat-icon>\\n                                                              <mat-icon *ngIf=\\\"vvvv.showSubfolders\\\">keyboard_arrow_down</mat-icon>\\n                                                            </button>\\n                                                            <button type=\\\"button\\\" mat-icon-button (click)=\\\"removeSomething([{val:i}, {val:j},{val:k},{val:e}, {val:kk}, {val:ee, remove:true}], 'fieldsForm')\\\"\\n                                                              matTooltip=\\\"Remove {{vvvv.controls.value.value}}\\\">\\n                                                              <mat-icon>delete</mat-icon>\\n                                                            </button>\\n                                                            <mat-form-field class=\\\"w-100-p\\\" fxFlex=\\\"30%\\\">\\n                                                              <input matInput name=\\\"fieldvalue\\\" placeholder=\\\"Value\\\" formControlName=\\\"value\\\">\\n                                                            </mat-form-field>\\n                                                          </div>\\n                                                        </div>\\n                                                        <button class=\\\"ml-32\\\" matTooltip=\\\"Add Value to {{fff.controls.key.value}}\\\" type=\\\"button\\\" mat-icon-button (click)=\\\"addSomething([{val:i}, {val:j},{val:k},{val:e}, {val:kk,add:true}], 'fieldsForm');listClick($event, fff, 'open')\\\">\\n                                                          <mat-icon aria-label=\\\"add value\\\">add</mat-icon>\\n                                                        </button>\\n                                                      </div>\\n                                                      <!--/6 -->\\n                                                    </div>\\n                                                  </div>\\n                                                </div>\\n                                                <button class=\\\"ml-32\\\" matTooltip=\\\"Add Field to {{vvv.controls.value.value}}\\\" type=\\\"button\\\" mat-icon-button (click)=\\\"addSomething([{val:i}, {val:j}, {val:k},{val:e, add: true}], 'fieldsForm');listClick($event, vvv, 'open')\\\">\\n                                                  <mat-icon aria-label=\\\"add field\\\">add</mat-icon>\\n                                                </button>\\n                                              </div>\\n                                              <!--/5-->\\n                                            </div>\\n\\n\\n                                          </div>\\n                                          <button class=\\\"ml-32\\\" matTooltip=\\\"Add Value to {{ff.controls.key.value}}\\\" type=\\\"button\\\" mat-icon-button (click)=\\\"addSomething([{val:i}, {val:j}, {val:k,add:true}], 'fieldsForm');listClick($event, ff, 'open')\\\">\\n                                            <mat-icon aria-label=\\\"add value\\\">add</mat-icon>\\n                                          </button>\\n                                        </div>\\n                                        <!--/4 -->\\n                                      </div>\\n                                    </div>\\n                                  </div>\\n                                  <button class=\\\"ml-32\\\" matTooltip=\\\"Add Field to {{vv.controls.value.value}}\\\" type=\\\"button\\\" mat-icon-button (click)=\\\"addSomething([{val: i}, {val:j,add:true}], 'fieldsForm');listClick($event, vv, 'open')\\\">\\n                                    <mat-icon aria-label=\\\"add field\\\">add</mat-icon>\\n                                  </button>\\n                                </div>\\n                                <!--/3-->\\n                              </div>\\n                            </div>\\n                            <button class=\\\"ml-32\\\" type=\\\"button\\\" mat-icon-button (click)=\\\"addSomething([{val: i, add: true}], 'fieldsForm');listClick($event, field, 'open')\\\"\\n                              matTooltip=\\\"Add Value to {{field.controls.key.value}}\\\">\\n                              <mat-icon aria-label=\\\"add value\\\">add</mat-icon>\\n                            </button>\\n\\n                          </div>\\n                        </div>\\n                        <!--/1-->\\n                      </div>\\n\\n\\n                    </mat-expansion-panel>\\n                  </div>\\n                  <br/>\\n                  <button type=\\\"button\\\" mat-icon-button (click)=\\\"addSomething(null, 'fieldsForm')\\\" matTooltip=\\\"Add Field to the Category {{fieldsForm.controls.title.value}}\\\">\\n                    <mat-icon aria-label=\\\"add field\\\">add</mat-icon>\\n                  </button>\\n                </mat-accordion>\\n              </form>\\n            </mat-tab>\\n\\n            <mat-tab label=\\\"Sub-Categories\\\" *ngIf=\\\"isEditMode\\\">\\n              <div class=\\\"tab-content p-24\\\" fxFlex>\\n                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end end\\\">\\n                  <button mat-button type=\\\"button\\\" color=\\\"warn\\\" *ngIf=\\\"isEditMode\\\" (click)=\\\"deleteAllSubCategories()\\\">Delete All Sub-Categories\\n                  </button>\\n                </div>\\n                <mat-accordion *ngIf=\\\"showMe2\\\">\\n                  <mat-expansion-panel *ngFor=\\\"let sub of subCategories, let num = index\\\" (opened)=\\\"setSelectedForm(sub)\\\" [expanded]=\\\"selectedForm && selectedForm.value.id === sub.value.id && panelOpened\\\">\\n                    <mat-expansion-panel-header>\\n                      <mat-panel-title>\\n                        <h3 class=\\\"text-bold\\\"> {{sub.value.title}}</h3>\\n                      </mat-panel-title>\\n                      <!--<mat-panel-description>\\n\\n                        </mat-panel-description>-->\\n                    </mat-expansion-panel-header>\\n                    <div *ngIf=\\\"selectedForm\\\">\\n                      <form [formGroup]=\\\"selectedForm\\\" novalidate (ngSubmit)=\\\"onSubmit(selectedForm)\\\">\\n                        <mat-form-field>\\n                          <input matInput formControlName=\\\"title\\\" placeholder=\\\"title\\\">\\n                        </mat-form-field>\\n                        <div formArrayName=\\\"fields\\\" *ngIf=\\\"selectedForm.controls.fields\\\">\\n                          <div *ngFor=\\\"let field of getSubCategoryFields(sub); let i = index\\\">\\n                            <div fxLayout=\\\"row\\\">\\n                              <!--1-->\\n                              <button type=\\\"button\\\" mat-icon-button (click)=\\\"listClick($event, field)\\\">\\n                                <mat-icon *ngIf=\\\"!field.showSubfolders\\\">keyboard_arrow_right</mat-icon>\\n                                <mat-icon *ngIf=\\\"field.showSubfolders\\\">keyboard_arrow_down</mat-icon>\\n                              </button>\\n                              <div formGroupName=\\\"{{i}}\\\" fxLayout=\\\"column\\\">\\n                                <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"2rem\\\">\\n                                  <button type=\\\"button\\\" mat-icon-button (click)=\\\"removeSomething([{val:i, remove: true}], 'selectedForm')\\\" matTooltip=\\\"Remove {{field.controls.key.value}}\\\">\\n                                    <mat-icon>delete</mat-icon>\\n                                  </button>\\n\\n\\n                                  <mat-form-field class=\\\"w-100-p\\\">\\n                                    <input matInput name=\\\"fieldkey\\\" placeholder=\\\"Key\\\" formControlName=\\\"key\\\" required>\\n                                  </mat-form-field>\\n                                  <mat-form-field class=\\\"w-100-p\\\" *ngIf=\\\"field.controls.type.value === 'text' || field.controls.type.value === 'choose'\\\">\\n                                    <input matInput name=\\\"fieldkey\\\" placeholder=\\\"Value\\\" formControlName=\\\"value\\\">\\n                                  </mat-form-field>\\n                                  <mat-form-field class=\\\"w-100-p\\\" *ngIf=\\\"field.controls.type.value === 'number'\\\">\\n                                    <input type=\\\"number\\\" matInput name=\\\"fieldkey\\\" placeholder=\\\"Value\\\" formControlName=\\\"value\\\">\\n                                  </mat-form-field>\\n                                  <mat-form-field class=\\\"w-100-p\\\">\\n                                    <input type=\\\"number\\\" matInput name=\\\"fieldPriority\\\" placeholder=\\\"Priority\\\" formControlName=\\\"priority\\\">\\n                                  </mat-form-field>\\n                                  <mat-form-field class=\\\"w-100-p\\\">\\n                                    <mat-select placeholder=\\\"Type\\\" name=\\\"fieldtype\\\" formControlName=\\\"type\\\" ([value])=\\\"field.controls.type.value\\\" (change)=\\\"onSelectType([{val:i, type:'choose'}], field.controls.type.value, 'selectedForm')\\\">\\n                                      <mat-option value=\\\"text\\\">Text</mat-option>\\n                                      <mat-option value=\\\"number\\\">Number</mat-option>\\n                                      <mat-option value=\\\"choose\\\">Select</mat-option>\\n                                    </mat-select>\\n                                  </mat-form-field>\\n\\n                                  <button type=\\\"button\\\" mat-icon-button>\\n                                    <mat-checkbox matTooltip=\\\"Is In Filter?\\\" formControlName=\\\"isInFilter\\\"></mat-checkbox>\\n                                  </button>\\n\\n                                </div>\\n                                <!--2-->\\n\\n                                <div *ngIf=\\\"field.controls.type.value === 'choose' && field.controls.values && field.controls.values.length>0\\\" formArrayName=\\\"values\\\"\\n                                  fxLayout=\\\"column\\\">\\n                                  <div class=\\\"ml-32\\\" *ngFor=\\\"let vv of field.controls.values.controls; let j = index\\\" fxLayout=\\\"column\\\">\\n\\n                                    <div fxLayout=\\\"column\\\" formGroupName=\\\"{{j}}\\\" *ngIf=\\\"field.showSubfolders\\\" [ngClass]=\\\"{ 'subfolder': selectedItem == field }\\\">\\n                                      <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"2rem\\\">\\n                                        <button type=\\\"button\\\" mat-icon-button (click)=\\\"listClick($event, vv)\\\">\\n                                          <mat-icon *ngIf=\\\"!vv.showSubfolders\\\">keyboard_arrow_right</mat-icon>\\n                                          <mat-icon *ngIf=\\\"vv.showSubfolders\\\">keyboard_arrow_down</mat-icon>\\n                                        </button>\\n                                        <button type=\\\"button\\\" mat-icon-button (click)=\\\"removeSomething([{val: i}, {val: j, remove: true}], 'selectedForm')\\\" matTooltip=\\\"Remove {{vv.controls.value.value}}\\\">\\n                                          <mat-icon>delete</mat-icon>\\n                                        </button>\\n                                        <mat-form-field class=\\\"w-100-p\\\" fxFlex=\\\"30%\\\">\\n                                          <input matInput name=\\\"fieldvalue\\\" placeholder=\\\"Value\\\" formControlName=\\\"value\\\">\\n                                        </mat-form-field>\\n                                      </div>\\n                                      <!--3-->\\n                                      <div fxLayout=\\\"column\\\">\\n                                        <div *ngIf=\\\"vv.controls.fields && vv.controls.fields!==null && vv.controls.fields.length>0\\\" formArrayName=\\\"fields\\\">\\n                                          <div class=\\\"ml-32\\\" *ngFor=\\\"let ff of vv.controls.fields.controls; let k = index\\\" fxLayout=\\\"column\\\">\\n                                            <div fxLayout=\\\"column\\\" formGroupName=\\\"{{k}}\\\" *ngIf=\\\"vv.showSubfolders\\\" [ngClass]=\\\"{ 'subfolder': selectedItem == vv }\\\">\\n                                              <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"1rem\\\">\\n                                                <button type=\\\"button\\\" mat-icon-button (click)=\\\"listClick($event, ff)\\\">\\n                                                  <mat-icon *ngIf=\\\"!ff.showSubfolders\\\">keyboard_arrow_right</mat-icon>\\n                                                  <mat-icon *ngIf=\\\"ff.showSubfolders\\\">keyboard_arrow_down</mat-icon>\\n                                                </button>\\n                                                <button type=\\\"button\\\" mat-icon-button (click)=\\\"removeSomething([{val:i},{val:j},{val:k, remove:true}], 'selectedForm')\\\" matTooltip=\\\"Remove {{ff.controls.key.value}}\\\">\\n                                                  <mat-icon>delete</mat-icon>\\n                                                </button>\\n\\n                                                <mat-form-field class=\\\"w-100-p\\\">\\n                                                  <input matInput name=\\\"ff\\\" placeholder=\\\"Key\\\" formControlName=\\\"key\\\">\\n                                                </mat-form-field>\\n                                                <mat-form-field class=\\\"w-100-p\\\" *ngIf=\\\"field.controls.type.value === 'text' || field.controls.type.value === 'choose'\\\">\\n                                                  <input matInput name=\\\"fieldkey\\\" placeholder=\\\"Value\\\" formControlName=\\\"value\\\">\\n                                                </mat-form-field>\\n                                                <mat-form-field class=\\\"w-100-p\\\" *ngIf=\\\"field.controls.type.value === 'number'\\\">\\n                                                  <input type=\\\"number\\\" matInput name=\\\"fieldkey\\\" placeholder=\\\"Value\\\" formControlName=\\\"value\\\">\\n                                                </mat-form-field>\\n                                                <mat-form-field class=\\\"w-100-p\\\">\\n                                                  <input type=\\\"number\\\" matInput name=\\\"fieldPriority\\\" placeholder=\\\"Priority\\\" formControlName=\\\"priority\\\">\\n                                                </mat-form-field>\\n                                                <mat-form-field class=\\\"w-100-p\\\">\\n                                                  <mat-select name=\\\"fft\\\" placeholder=\\\"Type\\\" formControlName=\\\"type\\\" ([value])=\\\"ff.controls.type.value\\\" (change)=\\\"onSelectType([{val:i}, {val:j}, {val:k,type:'choose'}], ff.controls.type.value,'selectedForm')\\\">\\n                                                    <mat-option value=\\\"text\\\">Text</mat-option>\\n                                                    <mat-option value=\\\"number\\\">Number</mat-option>\\n                                                    <mat-option value=\\\"choose\\\">Select</mat-option>\\n                                                  </mat-select>\\n                                                </mat-form-field>\\n\\n                                                <button type=\\\"button\\\">\\n                                                  <mat-checkbox matTooltip=\\\"Is In Filter?\\\" formControlName=\\\"isInFilter\\\"></mat-checkbox>\\n                                                </button>\\n\\n                                              </div>\\n                                              <!--4-->\\n                                              <div *ngIf=\\\"ff.controls.type.value === 'choose'\\\" formArrayName=\\\"values\\\" fxLayout=\\\"column\\\">\\n                                                <div class=\\\"ml-32\\\" *ngFor=\\\"let vvv of ff.controls.values.controls; let e = index \\\">\\n                                                  <div fxLayout=\\\"column\\\" formGroupName=\\\"{{e}}\\\" *ngIf=\\\"ff.showSubfolders\\\" [ngClass]=\\\"{ 'subfolder': selectedItem == ff }\\\">\\n                                                    <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"2rem\\\">\\n                                                      <button type=\\\"button\\\" mat-icon-button (click)=\\\"listClick($event, vvv)\\\">\\n                                                        <mat-icon *ngIf=\\\"!vvv.showSubfolders\\\">keyboard_arrow_right</mat-icon>\\n                                                        <mat-icon *ngIf=\\\"vvv.showSubfolders\\\">keyboard_arrow_down</mat-icon>\\n                                                      </button>\\n                                                      <button type=\\\"button\\\" mat-icon-button (click)=\\\"removeSomething([{val:i}, {val:j}, {val:k}, {val:e, remove:true}], 'selectedForm')\\\"\\n                                                        matTooltip=\\\"Remove {{vvv.controls.value.value}}\\\">\\n                                                        <mat-icon>delete</mat-icon>\\n                                                      </button>\\n                                                      <mat-form-field class=\\\"w-100-p\\\" fxFlex=\\\"30%\\\">\\n                                                        <input matInput name=\\\"fieldvalue\\\" placeholder=\\\"Value\\\" formControlName=\\\"value\\\">\\n                                                      </mat-form-field>\\n                                                    </div>\\n                                                    <!--5-->\\n                                                    <div fxLayout=\\\"column\\\">\\n                                                      <div *ngIf=\\\"vvv.controls.fields && vvv.controls.fields!==null && vvv.controls.fields.length>0\\\" formArrayName=\\\"fields\\\">\\n                                                        <div class=\\\"ml-32\\\" *ngFor=\\\"let fff of vvv.controls.fields.controls; let kk = index\\\" fxLayout=\\\"column\\\">\\n                                                          <div fxLayout=\\\"column\\\" formGroupName=\\\"{{kk}}\\\" *ngIf=\\\"vvv.showSubfolders\\\" [ngClass]=\\\"{ 'subfolder': selectedItem == vvv }\\\">\\n                                                            <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"1rem\\\">\\n                                                              <button type=\\\"button\\\" mat-icon-button (click)=\\\"listClick($event, fff)\\\">\\n                                                                <mat-icon *ngIf=\\\"!fff.showSubfolders\\\">keyboard_arrow_right</mat-icon>\\n                                                                <mat-icon *ngIf=\\\"fff.showSubfolders\\\">keyboard_arrow_down</mat-icon>\\n                                                              </button>\\n                                                              <button type=\\\"button\\\" mat-icon-button (click)=\\\"removeSomething([{val:i},{val:j},{val:k},{val:e},{val:kk, remove:true}], 'selectedForm')\\\"\\n                                                                matTooltip=\\\"Remove {{fff.controls.key.value}}\\\">\\n                                                                <mat-icon>delete</mat-icon>\\n                                                              </button>\\n\\n                                                              <mat-checkbox style=\\\"margin: 10px 0\\\" matTooltip=\\\"Is In Filter?\\\" formControlName=\\\"isInFilter\\\"></mat-checkbox>\\n\\n                                                              <mat-form-field class=\\\"w-100-p\\\">\\n                                                                <input matInput name=\\\"fff\\\" placeholder=\\\"Key\\\" formControlName=\\\"key\\\">\\n                                                              </mat-form-field>\\n                                                              <mat-form-field class=\\\"w-100-p\\\" *ngIf=\\\"fff.controls.type.value === 'text' || fff.controls.type.value === 'choose'\\\">\\n                                                                <input matInput name=\\\"fieldkey\\\" placeholder=\\\"Value\\\" formControlName=\\\"value\\\">\\n                                                              </mat-form-field>\\n                                                              <mat-form-field class=\\\"w-100-p\\\" *ngIf=\\\"fff.controls.type.value === 'number'\\\">\\n                                                                <input type=\\\"number\\\" matInput name=\\\"fieldkey\\\" placeholder=\\\"Value\\\" formControlName=\\\"value\\\">\\n                                                              </mat-form-field>\\n                                                              <mat-form-field class=\\\"w-100-p\\\">\\n                                                                <input type=\\\"number\\\" matInput name=\\\"fieldPriority\\\" placeholder=\\\"Priority\\\" formControlName=\\\"priority\\\">\\n                                                              </mat-form-field>\\n                                                              <mat-form-field class=\\\"w-100-p\\\">\\n                                                                <mat-select name=\\\"ffft\\\" placeholder=\\\"Type\\\" formControlName=\\\"type\\\" ([value])=\\\"fff.controls.type.value\\\" (change)=\\\"onSelectType([{val:i}, {val:j},{val:k},{val:e}, {val:kk,type:'choose'}], fff.controls.type.value,'selectedForm')\\\">\\n                                                                  <mat-option value=\\\"text\\\">Text</mat-option>\\n                                                                  <mat-option value=\\\"number\\\">Number</mat-option>\\n                                                                  <mat-option value=\\\"choose\\\">Select</mat-option>\\n                                                                </mat-select>\\n                                                              </mat-form-field>\\n                                                            </div>\\n                                                            <!--6-->\\n\\n                                                            <div *ngIf=\\\"fff.controls.type.value === 'choose'\\\" formArrayName=\\\"values\\\">\\n                                                              <div class=\\\"ml-32\\\" *ngFor=\\\"let vvvv of fff.controls.values.controls; let ee = index \\\" fxLayout=\\\"column\\\">\\n                                                                <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"2rem\\\" formGroupName=\\\"{{ee}}\\\" *ngIf=\\\"fff.showSubfolders\\\" [ngClass]=\\\"{ 'subfolder': selectedItem == fff }\\\">\\n                                                                  <button type=\\\"button\\\" mat-icon-button (click)=\\\"listClick($event, vvvv)\\\">\\n                                                                    <mat-icon *ngIf=\\\"!vvvv.showSubfolders\\\">keyboard_arrow_right</mat-icon>\\n                                                                    <mat-icon *ngIf=\\\"vvvv.showSubfolders\\\">keyboard_arrow_down</mat-icon>\\n                                                                  </button>\\n                                                                  <button type=\\\"button\\\" mat-icon-button (click)=\\\"removeSomething([{val:i}, {val:j},{val:k},{val:e}, {val:kk}, {val:ee, remove:true}], 'selectedForm')\\\"\\n                                                                    matTooltip=\\\"Remove {{vvvv.controls.value.value}}\\\">\\n                                                                    <mat-icon>delete</mat-icon>\\n                                                                  </button>\\n                                                                  <mat-form-field class=\\\"w-100-p\\\" fxFlex=\\\"30%\\\">\\n                                                                    <input matInput name=\\\"fieldvalue\\\" placeholder=\\\"Value\\\" formControlName=\\\"value\\\">\\n                                                                  </mat-form-field>\\n                                                                </div>\\n                                                              </div>\\n                                                              <button class=\\\"ml-32\\\" matTooltip=\\\"Add Value to {{fff.controls.key.value}}\\\" type=\\\"button\\\" mat-icon-button (click)=\\\"addSomething([{val:i}, {val:j},{val:k},{val:e}, {val:kk,add:true}], 'selectedForm');listClick($event, fff, 'open')\\\">\\n                                                                <mat-icon aria-label=\\\"add value\\\">add</mat-icon>\\n                                                              </button>\\n                                                            </div>\\n                                                            <!--/6 -->\\n                                                          </div>\\n                                                        </div>\\n                                                      </div>\\n                                                      <button class=\\\"ml-32\\\" matTooltip=\\\"Add Field to {{vvv.controls.value.value}}\\\" type=\\\"button\\\" mat-icon-button (click)=\\\"addSomething([{val:i}, {val:j}, {val:k},{val:e, add: true}], 'selectedForm');listClick($event, vvv, 'open')\\\">\\n                                                        <mat-icon aria-label=\\\"add field\\\">add</mat-icon>\\n                                                      </button>\\n                                                    </div>\\n                                                    <!--/5-->\\n                                                  </div>\\n\\n\\n                                                </div>\\n                                                <button class=\\\"ml-32\\\" matTooltip=\\\"Add Value to {{ff.controls.key.value}}\\\" type=\\\"button\\\" mat-icon-button (click)=\\\"addSomething([{val:i}, {val:j}, {val:k,add:true}], 'selectedForm');listClick($event, ff, 'open')\\\">\\n                                                  <mat-icon aria-label=\\\"add value\\\">add</mat-icon>\\n                                                </button>\\n                                              </div>\\n                                              <!--/4 -->\\n                                            </div>\\n                                          </div>\\n                                        </div>\\n                                        <button class=\\\"ml-32\\\" matTooltip=\\\"Add Field to {{vv.controls.value.value}}\\\" type=\\\"button\\\" mat-icon-button (click)=\\\"addSomething([{val: i}, {val:j,add:true}], 'selectedForm');listClick($event, vv, 'open')\\\">\\n                                          <mat-icon aria-label=\\\"add field\\\">add</mat-icon>\\n                                        </button>\\n                                      </div>\\n                                      <!--/3-->\\n                                    </div>\\n                                  </div>\\n                                  <button class=\\\"ml-32\\\" type=\\\"button\\\" mat-icon-button (click)=\\\"addSomething([{val: i, add: true}], 'selectedForm');listClick($event, field, 'open')\\\"\\n                                    matTooltip=\\\"Add Value to {{field.controls.key.value}}\\\">\\n                                    <mat-icon aria-label=\\\"add value\\\">add</mat-icon>\\n                                  </button>\\n\\n                                </div>\\n                              </div>\\n                              <!--/1-->\\n                            </div>\\n                          </div>\\n                        </div>\\n                      </form>\\n                    </div>\\n\\n                    <button type=\\\"button\\\" mat-icon-button (click)=\\\"addSomething(null, 'selectedForm')\\\" matTooltip=\\\"Add Main Field to the SubCategory \\\">\\n                      <mat-icon aria-label=\\\"add field\\\">add</mat-icon>\\n                    </button>\\n\\n                    <mat-action-row *ngIf=\\\"selectedForm\\\">\\n                      <button mat-button color=\\\"accent\\\" type=\\\"button\\\" *ngIf=\\\"isEditMode\\\" matTooltip=\\\"Save subcategory \\\" (click)=\\\"saveSubCategory()\\\">Save\\n                        <!--  [disabled]=\\\"(selectedForm.value.id === sub.value.id)&& selectedForm.status === 'INVALID')\\n                                || (selectedForm.controls.fields && selectedForm.controls.fields.status === 'INVALID')\\n                                ||(selectedForm.controls.fields && selectedForm.controls.fields.pristine === true)-->\\n                      </button>\\n\\n                      <button mat-button type=\\\"button\\\" color=\\\"warn\\\" *ngIf=\\\"isEditMode\\\" (click)=\\\"deleteSubCategory(sub)\\\">Delete\\n                      </button>\\n                    </mat-action-row>\\n                  </mat-expansion-panel>\\n                </mat-accordion>\\n                <button mat-icon-button type=\\\"button\\\" color=\\\"primary\\\" (click)=\\\"addNewSubCategory()\\\">\\n                  <mat-icon>add</mat-icon>\\n                </button>\\n              </div>\\n            </mat-tab>\\n          </mat-tab-group>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"#product .header .product-image {\\n  overflow: hidden;\\n  width: 56px;\\n  height: 56px; }\\n  #product .header .product-image img {\\n    height: 100%;\\n    width: 100%;\\n    max-width: none;\\n    border-radius: 50%; }\\n  #product .header .subtitle {\\n  margin: 6px 0 0 0; }\\n  #product .content .mat-tab-body-content {\\n  background: blue; }\\n  #product .content .mat-tab-body-content .tab-content {\\n    background: blue; }\\n  #product .content .mat-tab-body-content .tab-content .mat-accordion {\\n      background: blue; }\\n  #product .content .mat-tab-body-content .tab-content .mat-accordion .mat-expansion-panel {\\n        background: blue; }\\n  #product .content .mat-tab-body-content .tab-content .mat-accordion .mat-expansion-panel .mat-expansion-panel-content {\\n          overflow: unset !important; }\\n  #product .content .product-image {\\n  overflow: hidden;\\n  width: 128px;\\n  height: 128px;\\n  margin-right: 16px;\\n  margin-bottom: 16px;\\n  border: 3px solid rgba(0, 0, 0, 0.12); }\\n  #product .content .product-image img {\\n    height: 100%;\\n    width: auto;\\n    max-width: none; }\\n  #product .content .product img {\\n  border-radius: 50%;\\n  -o-object-fit: cover;\\n     object-fit: cover;\\n  width: 100%;\\n  height: 250px;\\n  /* width: 200px;\\n        height: 200px;*/ }\\n\"","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {fuseAnimations} from '../../../../core/animations';\nimport {FormArray, FormControl, FormGroup, NgForm, Validators, FormBuilder} from '@angular/forms';\nimport {CategoriesService} from '../categories.service';\nimport {Category} from '../../categories/category.model';\nimport {SubCategoriesService} from '../../categories/subCategories/subCategories.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {FuseSplashScreenService} from '../../../../core/services/splash-screen.service';\nimport {HelpersService} from '../../shared/helpers.service';\nimport {PageAction} from '../../shared/enums/page-action';\nimport {GUID} from '../../GUID/GUID.module';\nimport {MatTabChangeEvent} from '@angular/material';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\nimport {FuseConfirmDialogComponent} from '../../../../core/components/confirm-dialog/confirm-dialog.component';\nimport {ChangeDetectorRef} from '@angular/core';\n//import { JsonEditorComponent, JsonEditorOptions } from 'angular4-jsoneditor/jsoneditor/jsoneditor.component';\n\n\n\n@Component({\n  selector: 'app-category-edit',\n  templateUrl: './category-edit.component.html',\n  styleUrls: ['./category-edit.component.scss'],\n  animations: fuseAnimations\n})\nexport class CategoryEditComponent implements OnInit {\n  confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\n  categoryForm: FormGroup;\n  fieldsForm: FormGroup;\n  category: Category;\n  Guid: GUID;\n  subCategories = [];\n  isEditMode = false;\n  photo = '';\n  defaultImage = '../../../../../assets/images/ecommerce/product-image-placeholder.png';\n  selectedForm: FormGroup;\n  selectedFieldPanel: FormGroup;\n  panelOpened = false;\n  fieldsPanelOpen = false;\n  finalValues = new FormArray([]);\n  tabIndex = -1;\n  editorOptions;\n  data;\n\n\n  @ViewChild('file') fileSelector: ElementRef;\n\n  constructor(private route: ActivatedRoute,\n              private router: Router,\n              private categoriesService: CategoriesService,\n              private subCategoriesService: SubCategoriesService,\n              private loadingScreen: FuseSplashScreenService,\n              private helpers: HelpersService,\n              public dialog: MatDialog,\n              public formBuilder: FormBuilder\n             ) {\n    this.category = new Category();\n    this.Guid = new GUID();\n\n\n    this.data = {\"products\":[{\"name\":\"car\",\"product\":[{\"name\":\"honda\",\"model\":[{\"id\":\"civic\",\"name\":\"civic\"},{\"id\":\"accord\",\"name\":\"accord\"},{\"id\":\"crv\",\"name\":\"crv\"},{\"id\":\"pilot\",\"name\":\"pilot\"},{\"id\":\"odyssey\",\"name\":\"odyssey\"}]}]}]}\n  }\n\n  showMe = false;\n  showMe2 = false;\n  fixBug(index: number) {\n    if(index === 1) {\n      this.showMe = true;\n      this.showMe2 = false;\n    }else if (index === 2){\n      this.showMe2 = true;\n      this.showMe = false;\n    } else {\n      this.showMe = false;\n      this.showMe2 = false;\n    }\n  }\n  getErrorMessage(fieldName, required) {\n    return this.categoryForm.controls[fieldName].hasError(required) ? 'You must enter a value' :\n      '';\n  }\n\n  readFile(inputValue: any): void {\n    this.categoryForm.value.image = inputValue.files[0];\n    let reader: FileReader = new FileReader();\n\n    reader.onloadend = (e) => {\n      this.photo = reader.result;\n    };\n    reader.readAsDataURL(this.categoryForm.value.image);\n  }\n\n  browseProfilePicture() {\n    console.log(this.fileSelector);\n    this.fileSelector.nativeElement.click();\n    return false;\n  }\n\n  removeFile() {\n    console.log('this.categoryForm ', this.categoryForm);\n    this.photo = '';\n    this.categoryForm.value.image = '';\n  }\n\n  onFileChange(event) {\n    console.log(event);\n    this.readFile(event.target);\n  }\n\n\n  getSubCategoryFields() {\n    if (this.selectedForm) {\n      // console.log('this.selectedForm.controls.fields.controls ', this.selectedForm.controls.fields.controls);\n      return this.selectedForm.controls['fields']['controls'];\n    }\n  }\n\n  // ===========================================================================================//\n  selectedItem;\n  listClick(event, newValue, state) {\n    console.log(newValue);\n    this.selectedItem = newValue;\n    if(state)\n      newValue.showSubfolders = true;\n    else{\n      newValue.showSubfolders = !newValue.showSubfolders;\n    }\n    event.stopPropagation()\n  }\n\n  addSomething(levels = null, from): void {\n    console.log(\"addSomething \", levels);\n    if (!this[from].controls['fields']) {\n      this[from].controls['fields'] = new FormArray([]);\n    }\n    if (levels == null) { //fields 1\n      let item = this[from] as FormGroup;\n      let subItems = item.get('fields') as FormArray;\n      subItems.push(this.createItem(''));\n\n    } else {\n      if (levels[0] && levels[0].add) { //values 1\n        let subItems;\n        let items = this[from]['controls']['fields']['controls'][levels[0].val] as FormGroup;\n        subItems = items.get('values') as FormArray;\n\n\n        if (!subItems || subItems == null) {\n         // alert()\n          this[from]['controls']['fields']['controls'][levels[0].val]['controls']['values'] = new FormArray([]);\n          items = this[from]['controls']['fields']['controls'][levels[0].val] as FormGroup;\n          subItems = items.get('values') as FormArray;\n          console.log('subItems', subItems);\n        }\n\n        if (levels[0].type == 'choose') subItems.push(this.createSubItem(levels[0]));\n        else subItems.push(this.createSubItem(''));\n\n      }\n      if (levels[1] && levels[1].add) { //fields 2\n\n        let subItems;\n        let items = this[from]['controls']['fields']['controls'][levels[0].val]\n          ['controls']['values']['controls'][levels[1].val] as FormGroup;\n        subItems = items.get('fields') as FormArray;\n        if (!subItems || subItems == null) {\n          this[from]['controls']['fields']['controls'][levels[0].val]\n            ['controls']['values']['controls'][levels[1].val]['controls']['fields'] = new FormArray([]);\n          items = this[from]['controls']['fields']['controls'][levels[0].val]\n            ['controls']['values']['controls'][levels[1].val] as FormGroup;\n          subItems = items.get('fields') as FormArray;\n          console.log('subItems', subItems);\n        }\n\n        subItems.push(this.createSubItem2(''));\n      }\n\n      if (levels[2] && levels[2].add) { //values 2\n        let subItems;\n        let items = this[from]['controls']['fields']['controls'][levels[0].val]\n          ['controls']['values']['controls'][levels[1].val]\n          ['controls']['fields']['controls'][levels[2].val] as FormGroup;\n        subItems = items.get('values') as FormArray;\n        if (!subItems || subItems == null) {\n         // alert()\n          this[from]['controls']['fields']['controls'][levels[0].val]\n            ['controls']['values']['controls'][levels[1].val]\n            ['controls']['fields']['controls'][levels[2].val]['controls']['values'] = new FormArray([]);\n          items = this[from]['controls']['fields']['controls'][levels[0].val]\n            ['controls']['values']['controls'][levels[1].val]\n            ['controls']['fields']['controls'][levels[2].val] as FormGroup;\n          subItems = items.get('values') as FormArray;\n          console.log('subItems', subItems);\n        }\n\n        if (levels[2].type == 'choose') subItems.push(this.createSubItem3(levels[2]));\n        else subItems.push(this.createSubItem3(''));\n      }\n\n      if (levels[3] && levels[3].add) { //fields 3 level 5\n        let subItems;\n        let items = this[from]['controls']['fields']['controls'][levels[0].val]\n          ['controls']['values']['controls'][levels[1].val]\n          ['controls']['fields']['controls'][levels[2].val]\n          ['controls']['values']['controls'][levels[3].val] as FormGroup;\n        subItems = items.get('fields') as FormArray;\n        if (!subItems || subItems == null) {\n          this[from]['controls']['fields']['controls'][levels[0].val]\n            ['controls']['values']['controls'][levels[1].val]\n            ['controls']['fields']['controls'][levels[2].val]\n            ['controls']['values']['controls'][levels[3].val]['controls']['fields'] = new FormArray([]);\n          items = this[from]['controls']['fields']['controls'][levels[0].val]\n            ['controls']['values']['controls'][levels[1].val]\n            ['controls']['fields']['controls'][levels[2].val]\n            ['controls']['values']['controls'][levels[3].val] as FormGroup;\n          subItems = items.get('fields') as FormArray;\n          console.log('subItems', subItems);\n        }\n        subItems.push(this.createSubItem4(''));\n        console.log('subItems', subItems);\n      }\n\n\n      if (levels[4] && levels[4].add) { //values 3 level 6\n        let subItems;\n        let items = this[from]['controls']['fields']['controls'][levels[0].val]\n          ['controls']['values']['controls'][levels[1].val]\n          ['controls']['fields']['controls'][levels[2].val]\n          ['controls']['values']['controls'][levels[3].val]\n          ['controls']['fields']['controls'][levels[4].val] as FormGroup;\n        subItems = items.get('values') as FormArray;\n        if (!subItems || subItems == null) {\n          // alert()\n          this[from]['controls']['fields']['controls'][levels[0].val]\n            ['controls']['values']['controls'][levels[1].val]\n            ['controls']['fields']['controls'][levels[2].val]\n            ['controls']['values']['controls'][levels[3].val]\n            ['controls']['fields']['controls'][levels[4].val]['controls']['values'] = new FormArray([]);\n          items = this[from]['controls']['fields']['controls'][levels[0].val]\n            ['controls']['values']['controls'][levels[1].val]\n            ['controls']['fields']['controls'][levels[2].val]\n            ['controls']['values']['controls'][levels[3].val]\n            ['controls']['fields']['controls'][levels[4].val]as FormGroup;\n          subItems = items.get('values') as FormArray;\n          console.log('subItems', subItems);\n        }\n        if (levels[4].type == 'choose') subItems.push(this.createSubItem5(levels[4]));\n        else subItems.push(this.createSubItem5(''));\n      }\n\n    }\n  }\n\n  removeSomething(levels = null, from) {\n    if (levels[0] && levels[0].remove) {\n      let level = this[from].get('fields') as FormArray;\n      level.removeAt(levels[0].val);\n    }\n    if (levels[1] && levels[1].remove) {\n      let level = this[from].get('fields')['controls'][levels[0].val]\n        .get('values') as FormArray;\n      level.removeAt(levels[1].val);\n    }\n    if (levels[2] && levels[2].remove) {\n      let level = this[from].get('fields')['controls'][levels[0].val]\n        .get('values')['controls'][levels[1].val]\n        .get('fields') as FormArray;\n      level.removeAt(levels[2].val);\n    }\n    if (levels[3] && levels[3].remove) {\n      let level = this[from].get('fields')['controls'][levels[0].val]\n        .get('values')['controls'][levels[1].val]\n        .get('fields')['controls'][levels[2].val]\n        .get('values')as FormArray;\n      level.removeAt(levels[3].val);\n    }\n\n    if (levels[4] && levels[4].remove) {\n      let level = this[from].get('fields')['controls'][levels[0].val]\n        .get('values')['controls'][levels[1].val]\n        .get('fields')['controls'][levels[2].val]\n        .get('values')['controls'][levels[3].val]\n        .get('fields') as FormArray;\n      level.removeAt(levels[4].val);\n    }\n    if (levels[5] && levels[5].remove) {\n      let level = this[from].get('fields')['controls'][levels[0].val]\n        .get('values')['controls'][levels[1].val]\n        .get('fields')['controls'][levels[2].val]\n        .get('values')['controls'][levels[3].val]\n        .get('fields')['controls'][levels[4].val]\n        .get('values')as FormArray;\n      level.removeAt(levels[5].val);\n    }\n\n  }\n\n  onSelectType(level, type, from) {\n    console.log('level, type ', level, type);\n    if (type === 'choose') {\n      if (level[0] && level[0].type == 'choose') { // values 1\n        level[0].add = true;\n        level[0].type = 'choose';\n        this.addSomething(level, from);\n      } else if (level[2] && level[2].type == 'choose') { // values 2\n        level[2].add = true;\n        console.log('level', level);\n        this.addSomething(level, from);\n      }\n    }\n  }\n\n  setSelectedFieldsPanel(field){\n    this.selectedFieldPanel = field;\n    this.fieldsPanelOpen = true;\n  }\n\n  setSelectedForm(sub, close) {\n    console.log('setSelectedForm ', sub);\n    this.selectedForm = sub;\n    if (close == 'close') this.panelOpened = false;\n    else this.panelOpened = true;\n  }\n\n\n  createItem(obj): FormGroup { //Fields 1\n    if (obj.type == 'choose' && obj.values && obj.values.length > 0) {\n      var subArr = [];\n      for (var i = 0; i < obj.values.length; i++) {\n        subArr.push(this.createSubItem(obj.values[i]));\n      }\n      return this.formBuilder.group({\n        _id: obj._id || this.Guid.newGuid(),\n        key: obj.key || 'New Field',\n        type: obj.type || '',\n        value: obj.value || '',\n        priority: obj.priority || '',\n        isInFilter: obj.isInFilter || '',\n        values: this.formBuilder.array(subArr)\n      });\n    } else {\n      return this.formBuilder.group({\n        _id: obj._id || this.Guid.newGuid(),\n        key: obj.key || 'New Field',\n        type: obj.type || '',\n        value: obj.value || '',\n        priority: obj.priority || '',\n        isInFilter: obj.isInFilter || '',\n        values: this.formBuilder.array([])\n      });\n    }\n  }\n\n  createSubItem5(subItem): FormGroup { //values 2\n    console.log('createSubItem5 ', );\n     return this.formBuilder.group({\n        value: subItem.value || ''\n     });\n  }\n  createSubItem4(subItem): FormGroup { //fields 3\n    console.log('createSubItem4 ', );\n    if (subItem.type == 'choose' && subItem.values && subItem.values.length > 0) {\n      var subArr = [];\n      for (var i = 0; i < subItem.values.length; i++) {\n        subArr.push(this.createSubItem5(subItem.values[i]));\n      }\n      return this.formBuilder.group({\n        _id: subItem._id ||this.Guid.newGuid(),\n        key: subItem.key,\n        type: subItem.type,\n        priority: subItem.priority,\n        isInFilter: subItem.isInFilter,\n        value: subItem.value || '',\n        values: this.formBuilder.array(subArr)\n      });\n    } else {\n      console.log('createSubItem4 return else');\n      return this.formBuilder.group({\n        _id: subItem._id || this.Guid.newGuid(),\n        key: subItem.key,\n        type: subItem.type,\n        priority: subItem.priority,\n        isInFilter: subItem.isInFilter,\n        value: subItem.value,\n        values: this.formBuilder.array([])\n      });\n    }\n  }\n\n  createSubItem3(subItem): FormGroup { //values 2\n    if (subItem.fields && subItem.fields.length > 0) {\n      var subArr = [];\n      for (var i = 0; i < subItem.fields.length; i++) {\n        subArr.push(this.createSubItem4(subItem.fields[i]));\n      }\n      return this.formBuilder.group({\n        value: subItem.value || '',\n        fields: this.formBuilder.array(subArr)\n      });\n    } else {\n      console.log('createSubItem3 return' );\n      return this.formBuilder.group({\n        value: subItem.value || '',\n        fields: this.formBuilder.array([])\n      });\n    }\n  }\n\n  createSubItem2(subItem): FormGroup { //fields 2\n    if (subItem.type == 'choose' && subItem.values && subItem.values.length > 0) {\n      var subArr = [];\n      for (var i = 0; i < subItem.values.length; i++) {\n        subArr.push(this.createSubItem3(subItem.values[i]));\n      }\n      console.log('subArr ', subArr);\n      return this.formBuilder.group({\n        _id: subItem._id ||this.Guid.newGuid(),\n        key: subItem.key,\n        type: subItem.type,\n        priority: subItem.priority,\n        isInFilter: subItem.isInFilter,\n        value: subItem.value || '',\n        values: this.formBuilder.array(subArr)\n      });\n    } else {\n      return this.formBuilder.group({\n        _id: subItem._id || this.Guid.newGuid(),\n        key: subItem.key,\n        type: subItem.type,\n        priority: subItem.priority,\n        isInFilter: subItem.isInFilter,\n        value: subItem.value,\n        values: this.formBuilder.array([])\n      });\n    }\n  }\n\n  createSubItem(subItem): FormGroup { //values 1\n    if (subItem.fields && subItem.fields.length > 0) {\n      var subArr = [];\n      for (var i = 0; i < subItem.fields.length; i++) {\n        subArr.push(this.createSubItem2(subItem.fields[i]));\n      }\n      return this.formBuilder.group({\n        value: subItem.value || '',\n        fields: this.formBuilder.array(subArr)\n      });\n    } else {\n      return this.formBuilder.group({\n        value: subItem.value || '',\n        fields: this.formBuilder.array([])\n      });\n    }\n  }\n\n  createForm(obj) {\n    console.log('obj.title  ', obj.title );\n    if (obj.fields && obj.fields.length > 0) {\n      var arr = [];\n      for (var i = 0; i < obj.fields.length; i++) {\n        arr.push(this.createItem(obj.fields[i]));\n      }\n      return this.formBuilder.group({\n        title: new FormControl(obj.title || 'New Sub-category', [Validators.required]),\n        categoryId: new FormControl(obj.categoryId || ''),\n        id: new FormControl(obj.id || ''),\n        fields: this.formBuilder.array(arr)\n      });\n    } else {\n      return this.formBuilder.group({\n        title: new FormControl(obj.title || 'New Sub-category', [Validators.required]),\n        categoryId: new FormControl(obj.categoryId || ''),\n        id: new FormControl(obj.id || ''),\n        fields: this.formBuilder.array([])\n      });\n    }\n\n\n  }\n\n  getSubCategoriesListing() {\n\n    this.subCategories = [];\n    this.loadingScreen.show();\n    this.subCategoriesService.listing(this.category.id).then((val) => {\n      console.log('val.items ', val);\n      for (let i = 0; i < val.items.length; i++) {\n        //this.createForm(val.items[i].fields);\n        this.subCategories.push(this.createForm(val.items[i]));\n      }\n      console.log('this.subCategories ', this.subCategories);\n      this.loadingScreen.hide();\n    }, (reason) => {\n      this.loadingScreen.hide();\n      // console.log('error ', reason);\n    });\n    this.panelOpened = false;\n  }\n\n\n\n  // ===========================================================================================//\n\n\n  saveSubCategory() {\n    console.log('this.selectedForm.value ', this.selectedForm);\n    this.loadingScreen.show();\n    if (this.selectedForm.value.id === 0 || this.selectedForm.value.id === '') {\n      console.log('add ');\n      delete this.selectedForm.value.id;\n      this.subCategoriesService.add(this.category.id, this.selectedForm.value).then((val) => {\n        this.helpers.showActionSnackbar(PageAction.Create, true, 'sub-Categories');\n        this.getSubCategoriesListing();\n        this.loadingScreen.hide();\n      }, (reason) => {\n        this.helpers.showActionSnackbar(PageAction.Create, false, 'sub-Categories');\n        this.loadingScreen.hide();\n        console.log('error ', reason);\n      });\n    } else {\n      console.log('edit ');\n      this.subCategoriesService.update(this.category.id, this.selectedForm.value).then((val) => {\n        this.helpers.showActionSnackbar(PageAction.Update, true, 'sub-Categories');\n        this.getSubCategoriesListing();\n        this.loadingScreen.hide();\n        //this.selectedForm = new FormGroup({});\n        //this.panelOpened = false;\n        //this.finalValues = new FormArray([]);\n\n      }, (reason) => {\n        this.helpers.showActionSnackbar(PageAction.Update, false, 'sub-Categories');\n        this.loadingScreen.hide();\n        console.log('error ', reason);\n      });\n    }\n  }\n\n  addNewSubCategory() {\n    let sub = this.createForm('');\n    this.subCategories.push(sub);\n    this.selectedForm = sub;\n  }\n\n  deleteSubCategory(item) {\n    console.log('item ', item);\n    if (item.value.id && item.value.id !== 0) {\n      this.confirmDialogRef = this.dialog.open(FuseConfirmDialogComponent, {\n        disableClose: false\n      });\n\n      this.confirmDialogRef.componentInstance.confirmMessage = 'Are you sure you want to delete the sub-category (' + item.value.title + ') permanently?';\n\n      this.confirmDialogRef.afterClosed().subscribe(result => {\n        if (result) {\n          this.loadingScreen.show();\n          this.subCategoriesService.delete(this.category.id, item.value).then(\n            (serverResult) => {\n              console.log('serverResult ', serverResult);\n              this.subCategories = this.subCategories.filter(item1 => item1 !== item);\n              this.loadingScreen.hide();\n            },\n            (reason) => {\n              this.loadingScreen.hide();\n              console.log(reason);\n            }\n          );\n        }\n        this.confirmDialogRef = null;\n      });\n    } else {\n      this.subCategories = this.subCategories.filter(item1 => item1 !== item);\n    }\n  }\n\n  deleteAllSubCategories() {\n    this.confirmDialogRef = this.dialog.open(FuseConfirmDialogComponent, {\n      disableClose: false\n    });\n\n    this.confirmDialogRef.componentInstance.confirmMessage = 'Are you sure you want to delete ALL the sub-categories permanently?';\n\n    this.confirmDialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.loadingScreen.show();\n        this.subCategoriesService.deleteAll(this.category.id).then(\n          (serverResult) => {\n            console.log('serverResult ', serverResult);\n            this.subCategories = [];\n            this.loadingScreen.hide();\n          },\n          (reason) => {\n            this.loadingScreen.hide();\n            console.log(reason);\n          }\n        );\n      }\n      this.confirmDialogRef = null;\n    });\n  }\n\n\n  tabChanged(tabChangeEvent: MatTabChangeEvent) {\n    this.fieldsPanelOpen = false;\n    this.panelOpened = false;\n    this.tabIndex = tabChangeEvent.index;\n    if (this.isEditMode && tabChangeEvent.index === 2 && this.subCategories.length === 0) {\n      this.getSubCategoriesListing();\n    }\n  }\n\n  submit() {\n    if (this.isEditMode) {\n      console.log('this.fieldsForm edit', this.fieldsForm.value);\n      if(this.fieldsForm.value.fields && this.fieldsForm.value.fields.length>0){\n        this.categoryForm.value.fields = this.fieldsForm.value.fields\n      }\n      console.log('this.categoryForm edit', this.categoryForm.value);\n      this.categoriesService.update(this.categoryForm.value).then((val) => {\n        this.helpers.showActionSnackbar(PageAction.Update, true, 'categories');\n        this.router.navigate(['/categories']);\n        this.loadingScreen.hide();\n      }, (reason) => {\n        this.helpers.showActionSnackbar(PageAction.Update, false, 'categories');\n        this.loadingScreen.hide();\n        console.log('error ', reason);\n      });\n    } else {\n      delete this.categoryForm.value.id;\n      console.log('this.categoryForm add', this.categoryForm.value);\n        this.categoriesService.add(this.categoryForm.value).then((val) => {\n          this.helpers.showActionSnackbar(PageAction.Create, true, 'categories');\n          this.router.navigate(['/categories']);\n          this.loadingScreen.hide();\n        }, (reason) => {\n          this.helpers.showActionSnackbar(PageAction.Create, false, 'categories');\n          this.loadingScreen.hide();\n          console.log('error ', reason);\n        });\n    }\n  }\n\n  uploadImages(image) {\n    console.log('images ', image);\n    if (image && image !== '') {\n      const formData: FormData = new FormData();\n      console.log('typeof images[i] ', typeof image);\n      if (typeof image !== 'string') {\n        formData.append('file', image);\n        this.categoriesService.uploadImages(formData).then((val) => {\n          this.categoryForm.value.image = val[0];\n          this.submit();\n        }, (reason) => {\n          console.log('error ', reason);\n        });\n      } else {\n        this.categoryForm.value.image = image;\n        this.submit();\n      }\n    } else {\n      this.submit();\n    }\n  }\n\n\n  onSubmit(thisAdvertForm: NgForm) {\n    console.log('this.categoryForm ', this.categoryForm);\n    if (thisAdvertForm.valid) {\n      this.loadingScreen.show();\n      this.uploadImages(this.categoryForm.value.image);\n    }\n  }\n\n  ngOnInit() {\n    console.log('this.route.snapshot.data[\\'serverResult\\'] ', this.route.snapshot.data['serverResult']);\n    this.isEditMode = this.route.snapshot.data['isEditMode'];\n    this.subCategories = [];\n    if (this.route.snapshot.data['serverResult']) {\n      this.category = this.route.snapshot.data['serverResult'];\n      this.fieldsForm = this.createForm(this.category);\n      console.log('this.fieldsForm ', this.fieldsForm);\n      this.fieldsPanelOpen = false;\n      this.photo = this.category.image;\n    } else this.photo = '';\n    this.categoryForm = new FormGroup({\n      id: new FormControl(this.category.id),\n      title: new FormControl(this.category.title, [Validators.required]),\n      image: new FormControl(this.category.image)\n    });\n  }\n\n}\n","module.exports = \"<div id=\\\"users\\\" class=\\\"page-layout carded fullwidth\\\" fusePerfectScrollbar>\\n\\n  <!-- TOP BACKGROUND -->\\n  <div class=\\\"top-bg mat-accent-bg\\\"></div>\\n  <!-- / TOP BACKGROUND -->\\n\\n  <!-- CENTER -->\\n  <div class=\\\"center\\\">\\n\\n    <!-- HEADER -->\\n    <div class=\\\"header white-fg\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" fxLayout.gt-xs=\\\"row\\\"\\n         fxLayoutAlign.gt-xs=\\\"space-between center\\\">\\n\\n      <!-- APP TITLE -->\\n      <div class=\\\"logo my-12 m-sm-0\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n        <mat-icon class=\\\"logo-icon mr-16\\\" *fuseIfOnDom [@animate]=\\\"{value:'*',params:{delay:'50ms',scale:'0.2'}}\\\">\\n          group_work\\n        </mat-icon>\\n        <span class=\\\"logo-text h1\\\" *fuseIfOnDom\\n              [@animate]=\\\"{value:'*',params:{delay:'100ms',x:'-25px'}}\\\">Categories</span>\\n      </div>\\n      <!-- / APP TITLE -->\\n      <!-- SEARCH -->\\n      <div class=\\\"search-input-wrapper ml-8 m-sm-0\\\"\\n           fxFlex=\\\"1 0 auto\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n        <label class=\\\"mr-8\\\">\\n          <mat-icon class=\\\"secondary-text\\\">search</mat-icon>\\n        </label>\\n        <mat-form-field floatPlaceholder=\\\"never\\\" fxFlex=\\\"1 0 auto\\\">\\n          <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n        </mat-form-field>\\n      </div>\\n      <!-- / SEARCH -->\\n\\n      <button mat-raised-button class=\\\"reference-button mat-white-bg mt-16 mt-sm-0\\\" aria-label=\\\"new\\\"\\n              [routerLink]=\\\"'/categories/new'\\\">\\n        <span>New</span>\\n      </button>\\n\\n    </div>\\n    <!-- / HEADER -->\\n\\n    <!-- CONTENT CARD -->\\n    <div class=\\\"content-card mat-white-bg\\\">\\n      <div class=\\\"table-loading-shade\\\" *ngIf=\\\"isLoadingResults || isRateLimitReached\\\">\\n        <mat-spinner *ngIf=\\\"isLoadingResults\\\"></mat-spinner>\\n        <div class=\\\"table-rate-limit-reached\\\" *ngIf=\\\"isRateLimitReached\\\">\\n          No Data Available\\n        </div>\\n      </div>\\n\\n      <mat-table #table [dataSource]=\\\"dataSource\\\" [@animateStagger]=\\\"{value:'50'}\\\" class=\\\"items-table\\\"\\n                 fusePerfectScrollbar>\\n\\n        <!-- Id Column -->\\n        <ng-container cdkColumnDef=\\\"id\\\">\\n          <mat-header-cell *cdkHeaderCellDef fxHide fxShow.gt-sm fxFlex=\\\"10%\\\">ID</mat-header-cell>\\n          <mat-cell *cdkCellDef=\\\"let item\\\" fxHide fxShow.gt-sm fxFlex=\\\"10%\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start start\\\">\\n            <p class=\\\" text-truncate mat-caption m-0\\\">{{item.id.slice(0, 10)}}</p>\\n            <p class=\\\"text-truncate  mat-caption m-0\\\">{{item.id.slice(10,20)}}</p>\\n          </mat-cell>\\n        </ng-container>\\n\\n        <!-- Image Column -->\\n        <ng-container cdkColumnDef=\\\"image\\\">\\n          <mat-header-cell *cdkHeaderCellDef>Image</mat-header-cell>\\n          <mat-cell *cdkCellDef=\\\"let item\\\">\\n            <img class=\\\"item-image\\\"\\n                 *ngIf=\\\"item.image\\\" [alt]=\\\"item.title\\\"\\n                 [src]=\\\"item.image\\\"/>\\n            <img *ngIf=\\\"!item.image\\\" [src]=\\\"'assets/images/ecommerce/product-image-placeholder.png'\\\">\\n          </mat-cell>\\n        </ng-container>\\n\\n        <!-- Title Column -->\\n        <ng-container cdkColumnDef=\\\"title\\\">\\n          <mat-header-cell *cdkHeaderCellDef>Title</mat-header-cell>\\n          <mat-cell *cdkCellDef=\\\"let item\\\">\\n            <p class=\\\"text-truncate font-weight-600\\\">{{item.title}}</p>\\n          </mat-cell>\\n        </ng-container>\\n\\n        <!-- Buttons Column -->\\n        <ng-container cdkColumnDef=\\\"buttons\\\">\\n          <mat-header-cell *cdkHeaderCellDef></mat-header-cell>\\n          <mat-cell *cdkCellDef=\\\"let item\\\">\\n\\n            <div fxFlex=\\\"row\\\" fxLayoutAlign=\\\"end center\\\">\\n\\n              <button mat-icon-button [matMenuTriggerFor]=\\\"moreMenu\\\" aria-label=\\\"More\\\"\\n                      (click)=\\\"$event.stopPropagation();\\\">\\n                <mat-icon>more_vert</mat-icon>\\n              </button>\\n\\n              <mat-menu #moreMenu=\\\"matMenu\\\">\\n                <button mat-menu-item aria-label=\\\"edit\\\" (click)=\\\"editItem(item.id)\\\">\\n                  <mat-icon>edit</mat-icon>\\n                  <span>Edit</span>\\n                </button>\\n\\n                <button mat-menu-item aria-label=\\\"remove\\\" (click)=\\\"deleteItem(item)\\\">\\n                  <mat-icon>delete</mat-icon>\\n                  <span>Remove</span>\\n                </button>\\n              </mat-menu>\\n            </div>\\n\\n          </mat-cell>\\n        </ng-container>\\n\\n        <mat-header-row *cdkHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n        <mat-row *cdkRowDef=\\\"let item; columns: displayedColumns;\\\" (click)=\\\"itemDetails(item.id)\\\" matRipple\\n                 [@animate]=\\\"{value:'*',params:{y:'100%'}}\\\"\\n                 class=\\\"item\\\">\\n        </mat-row>\\n      </mat-table>\\n\\n      <mat-paginator [length]=\\\"resultsLength\\\" [pageSize]=\\\"20\\\" [pageSizeOptions]=[10,20,30]>\\n      </mat-paginator>\\n    </div>\\n    <!-- / CONTENT CARD -->\\n  </div>\\n  <!-- / CENTER -->\\n</div>\\n\"","module.exports = \"/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n */\\n/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\n:host .header .search-input-wrapper {\\n  max-width: 480px; }\\n@media (max-width: 599px) {\\n  :host .header {\\n    height: 176px !important;\\n    min-height: 176px !important;\\n    max-height: 176px !important; } }\\n@media (max-width: 599px) {\\n  :host .top-bg {\\n    height: 240px; } }\\n:host .items-table {\\n  flex: 1 1 auto;\\n  border-bottom: 1px solid rgba(0, 0, 0, 0.12); }\\n:host .items-table .mat-header-row {\\n    min-height: 64px; }\\n:host .items-table .item {\\n    position: relative;\\n    cursor: pointer;\\n    height: 84px; }\\n:host .items-table .mat-cell {\\n    min-width: 0;\\n    display: flex;\\n    align-items: center; }\\n:host .items-table .mat-column-id {\\n    flex: 0 1 84px; }\\n:host .items-table .mat-column-image {\\n    flex: 0 1 84px; }\\n:host .items-table .mat-column-image .item-image {\\n      width: 52px;\\n      height: 52px; }\\n:host .items-table .mat-column-buttons {\\n    flex: 0 1 80px; }\\n:host .items-table .active-icon {\\n    border-radius: 50%; }\\n:host .table-loading-shade {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  bottom: 26px;\\n  right: 0;\\n  background: rgba(0, 0, 0, 0.15);\\n  z-index: 1;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center; }\\n:host .table-rate-limit-reached {\\n  color: #980000;\\n  max-width: 360px;\\n  text-align: center; }\\n:host .table-header {\\n  min-height: 64px;\\n  padding: 8px 24px 0; }\\n:host .mat-form-field {\\n  font-size: 14px;\\n  width: 100%; }\\n\"","import { CategoriesService } from './../categories.service';\nimport { Category } from './../category.model';\nimport { Subscription } from 'rxjs/Subscription';\nimport { FuseSplashScreenService } from './../../../../core/services/splash-screen.service';\nimport { FuseConfirmDialogComponent } from './../../../../core/components/confirm-dialog/confirm-dialog.component';\nimport { MatDialogRef, MatDialog, MatPaginator, MatTableDataSource, PageEvent } from '@angular/material';\nimport { FormControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { fuseAnimations } from './../../../../core/animations';\nimport { Observable } from 'rxjs/Observable';\nimport { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { DataSource } from '@angular/cdk/collections';\nimport { ActivatedRouteSnapshot } from '@angular/router/src/router_state';\n\n@Component({\n  selector: 'app-category-list',\n  templateUrl: './category-list.component.html',\n  styleUrls: ['./category-list.component.scss'],\n  animations: fuseAnimations\n})\n\nexport class CategoryListComponent implements OnInit, OnDestroy {\n  dataSource: MatTableDataSource<Category>;\n  displayedColumns = ['id', 'image', 'title', 'buttons'];\n  btnState: boolean = false;\n  confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\n  onPageChangeSubscription: Subscription;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  isLoadingResults: boolean = false;\n  isRateLimitReached: boolean = false;\n  resultsLength = 0;\n  startedWith: string = '';\n\n  constructor(private categoriesService: CategoriesService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private dialog: MatDialog,\n    private loadingScreen: FuseSplashScreenService) {\n  }\n\n  /*routeTo(item, to: string) {\n    if (to === 'delete')\n      this.deleteItem(item);\n    else\n      this.router.navigate(['/categories', item.id, to]);\n  }*/\n\n  ngOnInit() {\n    this.dataSource = new MatTableDataSource<Category>();\n    const serverResult = this.activatedRoute.snapshot.data['serverResult'];\n    this.dataSource.data = serverResult.items;\n    this.resultsLength = serverResult.totalCount;\n\n    this.onPageChangeSubscription = this.paginator.page.subscribe(\n      (pageEvent: PageEvent) => {\n        // make http request to get users in pageIndex: pageEvent.index\n        this.categoriesService.listing(pageEvent.pageIndex, pageEvent.pageSize, this.startedWith)\n      }\n    );\n  }\n\n  ngOnDestroy() {\n    this.onPageChangeSubscription.unsubscribe();\n  }\n\n  editItem(itemId: string) {\n    this.router.navigate(['/categories', itemId, 'edit']);\n  }\n  itemDetails(itemId: string) {\n    this.router.navigate(['/categories', itemId, 'details']);\n  }\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\n    this.dataSource.filter = filterValue;\n  }\n\n\n  deleteItem(item) {\n    this.confirmDialogRef = this.dialog.open(FuseConfirmDialogComponent, {\n      disableClose: false\n    });\n\n    this.confirmDialogRef.componentInstance.confirmMessage = 'Are you sure you want to delete the category?';\n\n    this.confirmDialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.loadingScreen.show();\n        this.categoriesService.delete(item).then(\n          (serverResult) => {\n            console.log(\"serverResult \", serverResult);\n            this.dataSource.data = this.dataSource.data.filter(item1 => item1 !== item);\n             this.loadingScreen.hide();\n            /*this.dataSource.data = serverResult.users;\n            this.resultsLength = serverResult.totalCount;*/\n          },\n          (reason) => {\n            this.loadingScreen.hide();\n            console.log('delete category error!');\n          }\n        );\n      }\n      this.confirmDialogRef = null;\n    });\n  }\n\n}\n","export class Category {\n    constructor(public id: number = 0, public title: string = '',\n                public image: string = '') {}\n}","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\nimport { CategoriesService } from './categories.service';\n\n@Injectable()\nexport class CategoryResolver implements Resolve<any> {\n\n    constructor(private categoriesService: CategoriesService) {}\n\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) :  Observable<any> | Promise<any> | any {\n        return new Promise((resolve, reject) => {\n          let resolverType = route.data['resolverType'];\n          if(resolverType == 'list'){\n            this.categoriesService.listing().then(\n              (serverResult) => {\n                resolve(serverResult);\n              },\n              (reason: any) => {\n                console.log(reason);\n              }\n            );\n          } else {\n            const itemId = route.params['id'];\n            this.categoriesService.item(itemId).then(\n              (serverResult) => {\n                resolve(serverResult);\n              },\n              (reason: any) => {\n                console.log(reason);\n              }\n            );\n          }\n          \n        });\n      }\n}"],"sourceRoot":""}